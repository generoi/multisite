<?php

/**
 * @file multisite_statistics.module
 */

/**
 * Implements hook_views_api().
 */
function multisite_statistics_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_node_view().
 */
function multisite_statistics_node_view($node, $view_mode) {
  if (variable_get('statistics_count_content_views', 0) && variable_get('statistics_count_content_views_ajax', 0)) {
    if (empty($node->content['#attached']['js'])) {
      return;
    }
    $js = &$node->content['#attached']['js'];
    foreach ($js as $key => $data) {
      if (isset($data['data']['statistics'])) {
        // This only runs once per page so the single load call should be fine.
        if ($aggregate = multisite_aggregate_load_by_uuid($node->uuid)) {
          $js[$key]['data']['statistics']['url'] = url(drupal_get_path('module', 'multisite_statistics') . '/multisite_statistics.php');
          $js[$key]['data']['statistics']['data']['maid'] = $aggregate->maid;
        }
      }
    }
  }
}

/**
 * Implements hook_cron().
 */
function multisite_statistics_cron() {
  $statistics_timestamp = variable_get('multisite_statistics_day_timestamp', '');

  if ((REQUEST_TIME - $statistics_timestamp) >= 86400) {
    // Reset day counts.
    db_update('multisite_statistics')
      ->fields(array('daycount' => 0))
      ->execute();
    variable_set('multisite_statistics_day_timestamp', REQUEST_TIME);
  }
}
